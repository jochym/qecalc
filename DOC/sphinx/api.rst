API
===

Introduction
------------

.. automodule qecalc.qecalc
   :members:
   :undoc-members:
   :inherited-members:


.. autoclass:: qecalc.qecalc.QECalc
   :members:
   :inherited-members:


.. .. inheritance_diagram:: qecalc.qecalc

qecalc/property.py:

getTotalEnergy()
getSinglePhonon()  Freqs in meV
getLatticeParameters()
"""Extract lattice parameters after pwscf geometry optimization
Returns a list of 6 parameters: A, B, C, cos(BC), cos(AC), cos(AB)
"""
getStress()  in kbar
getForces() in Ry/au

qecalc/launchers:
quite Self explanatory

qecalc/qecalc.py:

kMeshCart(nq1, nq2, nq3) - Will generate k-point mesh in Cartesian coordinates
Lattice symmetry is not taken into account. Is not useful unless matdyn
parser is written


These methods are questionable to be public:

getkPointsFromPWSCF() - Returns array of points. Does not have to be AUTOMATIC

setkPointsAutomatic(kpoints) - kpoints is a list [nkx, nky, nkz, 1|0, 1|0, 1|0]
getEkincutoff() - reads kinetic energy cutoff

qecalc/qephon:

Most useful for now:
DOS() and partDOS('atomSymbol')
It is assumed, proper 'matdyn.modes' file was already generated by matdyn.x
list of atom symbols can be obtained from qe.structure.atomicSpecies[:].element
See qephon_ex.py example in examples/qephon directory



Here is a large overview:

.. image:: ../QECalc_diagram.png

.. todo: don't forget to replace the dataobjects with the current ones

To use the qecalc bindings for electronic structure, simply import them::

from qecalc import QECalc

or for phonons::

from qephon import QEPhon
mphon = QEPhon('config.ini')

For the following postprocessing routines to work, it is assumed all the input/output files exist.

.. todo: this documentation could be put as docstrings and then just autodoc'd here...(see http://sphinx.pocoo.org/ext/autodoc.html)

.. automodule qecalc.qecalc
	:members:
	:undoc-members:
	:inherited-members:


Here are some examples of inheritance diagrams:

.. .. inheritance_diagram:: qecalc.qecalc

Here are some examples of class diagrams:

.. .. class_diagram::